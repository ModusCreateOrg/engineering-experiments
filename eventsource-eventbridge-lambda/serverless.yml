service: jscoe155-eventbridge-lambda

custom:
  eventBus: 'jscoe155'
  eventSource: 'moduscreate.jscoe155'
  stage: ${opt:stage, self:provider.stage}
  tags:
    App: 'jscoe.moduscreate.com'
    Env: ${self:custom.stage}
    OU: 'moduscreate'
    Owner: 'Matthew Warman'
    Issue: 'JSCOE-155'

provider:
  name: aws
  stage: dev
  region: us-east-1
  runtime: nodejs14.x
  memorySize: 128
  timeout: 6
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - events:PutEvents
          Resource:
            - { 'Fn::GetAtt': ['EventBus', 'Arn'] }
  environment:
    EVENTBRIDGE_BUS: ${self:custom.eventBus}
    EVENTBRIDGE_SOURCE: ${self:custom.eventSource}
  logRetentionInDays: 7
  tags: ${self:custom.tags}

functions:
  createEvent:
    handler: src/events/handler.createEvent
    events:
      - http:
          path: /events
          method: post
  processEvent:
    handler: src/events/handler.processEvent
    events:
      - eventBridge:
          eventBus: !Ref EventBus
          pattern:
            source:
              - ${self:custom.eventSource}
            detail-type:
              - 'Process Event'

resources:
  Resources:
    EventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: ${self:custom.eventBus}

  Outputs:
    EventBusArn:
      Description: EventBridge Event Bus ARN
      Value:
        'Fn::GetAtt': [EventBus, Arn]
    EventBusName:
      Description: EventBridge Event Bus Name
      Value: !Ref EventBus
